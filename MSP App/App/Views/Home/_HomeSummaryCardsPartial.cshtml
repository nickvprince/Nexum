@model ICollection<Tenant>?

@{
    var activeDeviceId = Context.Session.GetString("ActiveDeviceId");
    var activeTenantId = Context.Session.GetString("ActiveTenantId");

    int newAlertsCount;
    int totalBackupsCount;
    int totalTenantsCount;
    int runningJobsCount;
    int totalJobsCount;

    if (activeTenantId != null)
    {
        totalTenantsCount = Model?.Count(t => t.Id == int.Parse(activeTenantId)) ?? 0;
    }
    else
    {
        totalTenantsCount = Model?.Count() ?? 0;
    }

    if(activeDeviceId != null)
    {
        newAlertsCount = Model?.Where(t => t.Devices != null)
            .SelectMany(t => t.Devices!)
            .Where(d => d.Alerts != null)
            .SelectMany(d => d.Alerts!)
            .Where(a => a.DeviceId == int.Parse(activeDeviceId))
            .Count(a => a.Acknowledged == false) ?? 0;

        totalBackupsCount = Model?.Where(t => t.NASServers != null)
            .SelectMany(t => t.NASServers!)
            .Where(n => n.Backups != null && n.Backups.Any(b =>
                Model.Where(t => t.Devices != null)
                    .SelectMany(t => t.Devices!)
                    .Where(d => d.Id == int.Parse(activeDeviceId))
                    .Select(d => d.DeviceInfo.ClientId)
                    .Contains(b.Client_Id)
            ))
            .Sum(n => n.Backups!.Count) ?? 0;

        runningJobsCount = Model?.Where(t => t.Devices != null)
            .SelectMany(t => t.Devices!)
            .Where(d => d.Jobs != null)
            .SelectMany(d => d.Jobs!)
            .Where(j => j.DeviceId == int.Parse(activeDeviceId))
            .Count(j => j.Status == DeviceJobStatus.InProgress || j.Status == DeviceJobStatus.Restarting || j.Status == DeviceJobStatus.Paused) ?? 0;

        totalJobsCount = Model?.Where(t => t.Devices != null)
            .SelectMany(t => t.Devices!)
            .Where(d => d.Jobs != null)
            .SelectMany(d => d.Jobs!)
            .Where(j => j.DeviceId == int.Parse(activeDeviceId))
            .Count() ?? 0;
    }
    else
    {
        newAlertsCount = Model?.Where(t => t.Devices != null)
            .SelectMany(t => t.Devices!)
            .Where(d => d.Alerts != null)
            .SelectMany(d => d.Alerts!)
            .Count(a => a.Acknowledged == false) ?? 0;

        totalBackupsCount = Model?.Where(t => t.NASServers != null)
            .SelectMany(t => t.NASServers!)
            .Where(n => n.Backups != null && n.Backups.Any(b =>
                Model.Where(t => t.Devices != null)
                    .SelectMany(t => t.Devices!)
                    .Select(d => d.DeviceInfo.ClientId)
                    .Contains(b.Client_Id)
            ))
            .Sum(n => n.Backups!.Count) ?? 0;

        runningJobsCount = Model?.Where(t => t.Devices != null)
            .SelectMany(t => t.Devices!)
            .Where(d => d.Jobs != null)
            .SelectMany(d => d.Jobs!)
            .Count(j => j.Status == DeviceJobStatus.InProgress || j.Status == DeviceJobStatus.Restarting || j.Status == DeviceJobStatus.Paused) ?? 0;

        totalJobsCount = Model?.Where(t => t.Devices != null)
            .SelectMany(t => t.Devices!)
            .Where(d => d.Jobs != null)
            .SelectMany(d => d.Jobs!)
            .Count() ?? 0;
    }

    var totalUsageCountGB = totalBackupsCount * Math.Round(new Random().NextDouble() * (100 - 50) + 50, 2);
    string totalUsageCount;
    if (totalUsageCountGB > 1000)
    {
        totalUsageCount = $"{Math.Round(totalUsageCountGB / 1000,2)} TB";
    }
    else
    {
        totalUsageCount = $"{Math.Round(totalUsageCountGB, 2)} GB";
    }


}
<!-- 6 Cards -->
<div class="d-flex flex-wrap justify-content-center my-3">
    <!-- New Alerts Card -->
    <div class="card bg-nexum-dark text-nexum-light m-1 border-nexum-dark-3 position-relative nexum-card-flex-item nexum-card-shadow">
        <div class="card-body d-flex align-items-center text-center">
            <div class="me-3">
                <div class="bg-nexum-light rounded-circle d-flex align-items-center justify-content-center nexum-card-container">
                    <i class="bi bi-bell-fill text-primary nexum-card-icon"></i>
                </div>
            </div>
            <div class="flex-grow-1">
                <h3 class="nexum-card-title mb-0">@newAlertsCount</h3>
                <p class="nexum-card-text mb-0">New Alerts</p>
            </div>
        </div>
    </div>
    <!-- Total Accounts Card -->
    <div class="card bg-nexum-dark text-nexum-light m-1 border-nexum-dark-3 position-relative nexum-card-flex-item nexum-card-shadow">
        <div class="card-body d-flex align-items-center text-center">
            <div class="me-3">
                <div class="bg-nexum-light rounded-circle d-flex align-items-center justify-content-center nexum-card-container">
                    <i class="bi bi-people-fill text-info nexum-card-icon"></i>
                </div>
            </div>
            <div class="flex-grow-1">
                <h3 class="nexum-card-title mb-0">@totalTenantsCount</h3>
                <p class="nexum-card-text mb-0">Total Tenants</p>
            </div>
        </div>
    </div>
    <!-- Jobs Running Card -->
    <div class="card bg-nexum-dark text-nexum-light m-1 border-nexum-dark-3 position-relative nexum-card-flex-item nexum-card-shadow">
        <div class="card-body d-flex align-items-center text-center">
            <div class="me-3">
                <div class="bg-nexum-light rounded-circle d-flex align-items-center justify-content-center nexum-card-container">
                    <i class="bi bi-list-task text-success nexum-card-icon"></i>
                </div>
            </div>
            <div class="flex-grow-1">
                <h3 class="nexum-card-title mb-0">@runningJobsCount</h3>
                <p class="nexum-card-text mb-0">Jobs Running</p>
            </div>
        </div>
    </div>

    <!-- Total Backups Card -->
    <div class="card bg-nexum-dark text-nexum-light m-1 border-nexum-dark-3 position-relative nexum-card-flex-item nexum-card-shadow">
        <div class="card-body d-flex align-items-center text-center">
            <div class="me-3">
                <div class="bg-nexum-light rounded-circle d-flex align-items-center justify-content-center nexum-card-container">
                    <i class="bi bi-database-fill text-warning nexum-card-icon"></i>
                </div>
            </div>
            <div class="flex-grow-1">
                <h3 class="nexum-card-title mb-0">@totalBackupsCount</h3>
                <p class="nexum-card-text mb-0">Total Backups</p>
            </div>
        </div>
    </div>
    <!-- Total Usage Card -->
    <div class="card bg-nexum-dark text-nexum-light m-1 border-nexum-dark-3 position-relative nexum-card-flex-item nexum-card-shadow">
        <div class="card-body d-flex align-items-center text-center">
            <div class="me-3">
                <div class="bg-nexum-light rounded-circle d-flex align-items-center justify-content-center nexum-card-container">
                    <i class="bi bi-hdd-fill text-danger nexum-card-icon"></i>
                </div>
            </div>
            <div class="flex-grow-1">
                <h3 class="nexum-card-title mb-0">@totalUsageCount</h3>
                <p class="nexum-card-text mb-0">Total Usage</p>
            </div>
        </div>
    </div>
    <!-- Total Jobs Card -->
    <div class="card bg-nexum-dark text-nexum-light m-1 border-nexum-dark-3 position-relative nexum-card-flex-item nexum-card-shadow">
        <div class="card-body d-flex align-items-center text-center">
            <div class="me-3">
                <div class="bg-nexum-light rounded-circle d-flex align-items-center justify-content-center nexum-card-container">
                    <i class="bi bi-briefcase-fill text-secondary nexum-card-icon"></i>
                </div>
            </div>
            <div class="flex-grow-1">
                <h3 class="nexum-card-title mb-0">@totalJobsCount</h3>
                <p class="nexum-card-text mb-0">Total Jobs</p>
            </div>
        </div>
    </div>
</div>