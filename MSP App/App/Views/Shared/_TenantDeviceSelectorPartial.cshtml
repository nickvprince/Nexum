@model ICollection<Tenant>?

<div class="d-flex justify-content-start align-items-center my-3">
    <div class="d-flex justify-content-start align-items-center py-1 px-2 border border-2 rounded-5 border-nexum-light overflow-x-auto">
        <b><span class="text-nexum-light me-2">Tenant:</span></b>
        <div class="dropdown me-3">
            <a class="text-nexum-dark text-decoration-none dropdown-toggle" href="#Tenant" role="button" id="tenantDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                @{
                    var activeTenantId = Context.Session.GetString("ActiveTenantId");
                    var tenantName = activeTenantId != null
                        ? Model.Where(t => t.Id == int.Parse(activeTenantId)).FirstOrDefault()?.Name
                        : "All";
                }
                <b>@tenantName</b>
            </a>
            <ul class="dropdown-menu" aria-labelledby="tenantDropdown">
                <li>
                    <form id="tenant-selectAll" asp-controller="Session" asp-action="Tenant">
                        <button type="submit" class="dropdown-item text-nexum-light" style="border: none; background: none;">
                            All
                        </button>
                    </form>
                </li>
                @if (Model != null)
                {
                    @foreach (var tenant in Model)
                    {
                        <li>
                            <form id="tenant-select@(tenant.Id)" asp-controller="Session" asp-action="Tenant">
                                <input type="hidden" asp-for="@tenant.Id" value="@tenant.Id" />
                                <button type="submit" class="dropdown-item text-nexum-light" style="border: none; background: none;">
                                    @tenant.Name
                                </button>
                            </form>
                        </li>
                    }
                }
            </ul>
        </div>
        <b><span class="text-nexum-light me-2">Device:</span></b>
        <div class="dropdown">
            <a class="text-nexum-dark text-decoration-none dropdown-toggle" href="#Device" role="button" id="deviceDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                @{
                    var activeDeviceId = Context.Session.GetString("ActiveDeviceId");
                    var deviceName = Model != null && !string.IsNullOrEmpty(activeDeviceId) && int.TryParse(activeDeviceId, out var parsedDeviceId)
                        ? Model.FirstOrDefault(t => t.Devices != null && t.Devices.Any(d => d.Id == parsedDeviceId))
                            ?.Devices?.FirstOrDefault(d => d.Id == parsedDeviceId)?.DeviceInfo?.Name ?? "All"
                        : "All";
                }
                <b>@deviceName</b>
            </a>
            <ul class="dropdown-menu" aria-labelledby="deviceDropdown">
                <li>
                    <form id="device-selectAll" asp-controller="Session" asp-action="Device">
                        <button type="submit" class="dropdown-item text-nexum-light" style="border: none; background: none;">
                            All
                        </button>
                    </form>
                </li>
                @if (Model != null)
                {
                    if (activeDeviceId != null)
                    {
                        var activeDeviceIdInt = int.Parse(activeDeviceId);
                        foreach (var device in Model.Where(t => t.Devices != null).SelectMany(t => t.Devices).Where(d => d.Id == activeDeviceIdInt))
                        {
                            <li>
                                <form id="device-select@(device.Id)" asp-controller="Session" asp-action="Device">
                                    <input type="hidden" asp-for="@device.Id" value="@device.Id" />
                                    <button type="submit" class="dropdown-item text-nexum-light" style="border: none; background: none;">
                                        @device.DeviceInfo.Name
                                    </button>
                                </form>
                            </li>
                        }
                    }
                    else if (activeTenantId != null)
                    {
                        var activeTenantIdInt = int.Parse(activeTenantId);
                        foreach (var device in Model.Where(t => t.Id == activeTenantIdInt && t.Devices != null).SelectMany(t => t.Devices))
                        {
                            <li>
                                <form id="device-select@(device.Id)" asp-controller="Session" asp-action="Device">
                                    <input type="hidden" asp-for="@device.Id" value="@device.Id" />
                                    <button type="submit" class="dropdown-item text-nexum-light" style="border: none; background: none;">
                                        @device.DeviceInfo.Name
                                    </button>
                                </form>
                            </li>
                        }
                    }
                    else
                    {
                        foreach (var device in Model.Where(t => t.Devices != null).SelectMany(t => t.Devices))
                        {
                            <li>
                                <form id="device-select@(device.Id)" asp-controller="Session" asp-action="Device">
                                    <input type="hidden" asp-for="@device.Id" value="@device.Id" />
                                    <button type="submit" class="dropdown-item text-nexum-light" style="border: none; background: none;">
                                        @device.DeviceInfo.Name
                                    </button>
                                </form>
                            </li>
                        }
                    }
                }
            </ul>
        </div>
    </div>
</div>