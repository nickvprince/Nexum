<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Nexum</title>
    <link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/lib/bootstrap-icons/font/bootstrap-icons.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body class="bg-dark bg-gradient">
    <header class="bg-nexum-dark bg-gradient sticky-top">
        <partial name="_NavBarPartial" />
    </header>
    <main role="main" class="bg-nexum-dark bg-gradient">
        @*<partial name="_CookieSessionListPartial" /> @*for developement*@
        <div class="container-fluid p-0">
            <div class="row gx-0">
                <div id="dashPartial1" class="col-xxl-1 p-0 d-none d-xxl-block rounded-end-5 border border-3 border-light" style="overflow-y: auto; overflow-x: hidden;">
                    <partial name="_DashboardSideNavPartial" />
                </div>
                <div id="dashPartial2" class="d-xxl-none mb-1 rounded-5 rounded-top-0 border border-3 border-light" style="overflow-x: auto; overflow-y: hidden;">
                    <partial name="_DashboardSideNavPartial" />
                </div>
                <div class="col-11 col-xxl-10 p-0 mx-auto">
                    <partial name="_TempDataMessagePartial" />
                    @RenderBody()
                </div>
            </div>
        </div>
    </main>
    <partial name="_FooterPartial" />
    <script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
    <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js" asp-append-version="true"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @* <script src="_framework/blazor.server.js"></script> *@
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        function updateSideNavClasses() {
            var sideNavs = document.querySelectorAll('#sideNav');
            sideNavs.forEach(function (sideNav) {
                var navLinks = sideNav.getElementsByTagName('a');

                if (window.innerWidth < 1400) { // breakpoint for Bootstrap
                    sideNav.classList.remove('justify-content-between', 'dashboard-nav-left');
                    sideNav.classList.add('justify-content-center', 'dashboard-nav-top', 'mb-2');
                    for (var i = 0; i < navLinks.length; i++) {
                        if (i == 0) 
                        {
                            navLinks[i].classList.remove('mb-auto', 'mt-5');
                            navLinks[i].classList.add('my-auto', 'ms-5');
                        }
                        else if (i == navLinks.length - 1) 
                        {
                            navLinks[i].classList.remove('mt-auto', 'mb-5');
                            navLinks[i].classList.add('my-auto', 'me-5');
                        }
                        else
                        {
                            navLinks[i].classList.remove('my-auto');
                            navLinks[i].classList.add('mx-auto');
                        }
                        
                    }
                } else {
                    sideNav.classList.remove('justify-content-center', 'dashboard-nav-top', 'my-2');
                    sideNav.classList.add('justify-content-between', 'dashboard-nav-left');
                    for (var i = 0; i < navLinks.length; i++) {
                        if (i == 0) 
                        {
                            navLinks[i].classList.remove('my-auto', 'ms-5');
                            navLinks[i].classList.add('mb-auto', 'mt-5');
                        }
                        else if (i == navLinks.length - 1) 
                        {
                            navLinks[i].classList.remove('my-auto', 'me-5');
                            navLinks[i].classList.add('mt-auto', 'mb-5');
                        }
                        else
                        {
                            navLinks[i].classList.remove('mx-auto');
                            navLinks[i].classList.add('my-auto');
                        }
                    }
                }
            });
        }

        // Run the function on load
        updateSideNavClasses();

        // Add event listener for window resize
        window.addEventListener('resize', updateSideNavClasses);
    });
</script>
<script>
    document.getElementById('navDropdownMenuButton').addEventListener('click', function () {
        var dropdownMenu = document.getElementById('navDropdownMenu');
        dropdownMenu.style.display = dropdownMenu.style.display === 'block' ? 'none' : 'block';
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        function setActiveLink(linkId) {
            var sideNavs = document.querySelectorAll('#sideNav');
            sideNavs.forEach(function (sideNav) {
                var navLinks = sideNav.querySelectorAll('.nav-link');
                navLinks.forEach(function (link) {
                    link.classList.remove('active');
                });
            });
            var activeLinks = document.querySelectorAll(`#${linkId}`);
            activeLinks.forEach(function (activeLink) {
                activeLink.classList.add('active');
            });
        }

        // Get the active link from session storage
        var activeLinkId = '@Context.Session.GetString("ActiveNavLink")';
        if (activeLinkId) {
            console.log('Active link from session:', activeLinkId);
            setActiveLink(activeLinkId);
        } else {
            console.log('No active link found in session storage.');
        }

        // Add click event listeners to each nav link
        var sideNavs = document.querySelectorAll('#sideNav');
        sideNavs.forEach(function (sideNav) {
            var navLinks = sideNav.querySelectorAll('.nav-link');
            navLinks.forEach(function (link) {
                link.addEventListener('click', function () {
                    event.preventDefault();
                    var linkId = this.id;
                    var targetUrl = this.getAttribute('href');

                    console.log('Clicked link id:', linkId);
                    setActiveLink(linkId);
                    console.log(JSON.stringify({ activeLinkId: linkId }));
                    // Save the active link to session storage via Ajax request
                    $.ajax({
                        type: 'POST',
                        url: '/api/Session',
                        contentType: 'application/json',
                        data: JSON.stringify({ activeLinkId: linkId }),
                        success: function () {
                            console.log('Active link saved to session storage:', linkId);
                            window.location.href = targetUrl;
                        },
                        error: function (xhr, status, error) {
                            console.error('Failed to save active link to session storage:', error);
                        }
                    });
                });
            });
        });
    });
</script>